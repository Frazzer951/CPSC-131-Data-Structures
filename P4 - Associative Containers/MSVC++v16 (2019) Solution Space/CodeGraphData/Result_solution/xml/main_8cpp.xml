<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="main_8cpp" kind="file">
    <compoundname>main.cpp</compoundname>
    <includes local="no">exception</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">iostream</includes>
    <includes refid="_bookstore_8hpp" local="yes">Bookstore.hpp</includes>
    <incdepgraph>
      <node id="205">
        <label>iomanip</label>
      </node>
      <node id="210">
        <label>string</label>
      </node>
      <node id="208">
        <label>map</label>
      </node>
      <node id="204">
        <label>exception</label>
      </node>
      <node id="207">
        <label>Bookstore.hpp</label>
        <link refid="_bookstore_8hpp"/>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>string_view</label>
      </node>
      <node id="206">
        <label>iostream</label>
      </node>
      <node id="209">
        <label>set</label>
      </node>
      <node id="203">
        <label>Z:/P4 - Associative Containers/SourceCode/main.cpp</label>
        <link refid="main.cpp"/>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>Book.hpp</label>
        <link refid="_book_8hpp"/>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TO-DO (1) //////////////////////////////</para><para>Create your bookstore</para><para>TO-DO (2) //////////////////////////////</para><para>Now, let&apos;s pretend your bookstore is busy with several shoppers, each pushing a shopping cart filled with a bunch of books by using your store&apos;s makeShoppingCarts function to create a collection of shopping carts.</para><para>TO-DO (3) //////////////////////////////</para><para>There are several shoppers standing in line waiting to pay for the books in their shopping cart. Process them all by passing the collection of shopping carts to your store&apos;s processCustomerShoppingCarts function. This function will, for each shopper, scan all the books in their shopping cart, print a receipt with an amount due, deduct the items bought from the store&apos;s inventory, and returns a collection of books sold.</para><para>TO-DO (4) //////////////////////////////</para><para>Get a reference to your store&apos;s inventory by using your store&apos;s inventory function. The store doesn&apos;t carry everything, especially all at once. The inventory tells you how many of each item are currently on hand (i.e., in stock).</para><para>The store&apos;s managers have decided to stop selling Wild Mammals (ISBN: 9802161748), so remove this from the store&apos;s inventory.</para><para>TO-DO (5) //////////////////////////////</para><para>All the shoppers have now checkout out and it&apos;s late in the day. Close your store, take inventory, and if you sold enough books to fall below your re-order threshold, order more by using your store&apos;s reorderItems function passing the collection of books sold. </para>        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/main.cpp" line="13" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/main.cpp" bodystart="13" bodyend="71"/>
        <references refid="class_bookstore_1ab6c5783c56572530b5a48c2c58ba119c" compoundref="_bookstore_8cpp" startline="49" endline="52">Bookstore::inventory</references>
        <references refid="class_bookstore_1abb469147b72d1a9d258323c757495c66" compoundref="_bookstore_8cpp" startline="187" endline="277">Bookstore::makeShoppingCarts</references>
        <references refid="class_bookstore_1a2070d6b68ab700dd10fcb2ba94135a43" compoundref="_bookstore_8cpp" startline="60" endline="119">Bookstore::processCustomerShoppingCarts</references>
        <references refid="class_bookstore_1ae22380272d6bb1c94ac620d95bc0ab3e" compoundref="_bookstore_8cpp" startline="127" endline="179">Bookstore::reorderItems</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setprecision()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout,<sp/>fixed(),<sp/>showpoint()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_bookstore_8hpp" kindref="compound">Bookstore.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(<sp/>2<sp/>)<sp/>&lt;&lt;<sp/>std::showpoint;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bookstore" kindref="compound">Bookstore</ref><sp/>bookstore;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bookstore_1aae615c92c10ffb6253f8e295700c18e8" kindref="member">Bookstore::ShoppingCarts</ref><sp/>carts<sp/>=<sp/>bookstore.<ref refid="class_bookstore_1abb469147b72d1a9d258323c757495c66" kindref="member">makeShoppingCarts</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bookstore_1a8a4586ed49d4d9f934215fd8ee3b1031" kindref="member">Bookstore::BooksSold</ref><sp/>sales<sp/>=<sp/>bookstore.<ref refid="class_bookstore_1a2070d6b68ab700dd10fcb2ba94135a43" kindref="member">processCustomerShoppingCarts</ref>(<sp/>carts<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bookstore_1a011ecf363f27548abc41e399d536c27d" kindref="member">Bookstore::Inventory_DB</ref><sp/>&amp;<sp/>inv<sp/>=<sp/>bookstore.<ref refid="class_bookstore_1ab6c5783c56572530b5a48c2c58ba119c" kindref="member">inventory</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>inv.erase(<sp/></highlight><highlight class="stringliteral">&quot;9802161748&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>bookstore.<ref refid="class_bookstore_1ae22380272d6bb1c94ac620d95bc0ab3e" kindref="member">reorderItems</ref>(<sp/>sales<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;<sp/>ex<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FAILED<sp/>-<sp/>Unhandled<sp/>exception:\n&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/>ex.what()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Z:/P4 - Associative Containers/SourceCode/main.cpp"/>
  </compounddef>
</doxygen>
