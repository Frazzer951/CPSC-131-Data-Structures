<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_bookstore" kind="class" prot="public">
    <compoundname>Bookstore</compoundname>
    <includes refid="_bookstore_8hpp" local="no">Bookstore.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bookstore_1a8a4586ed49d4d9f934215fd8ee3b1031" prot="public" static="no">
        <type>std::set&lt; std::string &gt;</type>
        <definition>using Bookstore::BooksSold =  std::set&lt;std::string &gt;</definition>
        <argsstring></argsstring>
        <name>BooksSold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="17" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bookstore_1a011ecf363f27548abc41e399d536c27d" prot="public" static="no">
        <type>std::map&lt; std::string, unsigned int &gt;</type>
        <definition>using Bookstore::Inventory_DB =  std::map&lt;std::string , unsigned int &gt;</definition>
        <argsstring></argsstring>
        <name>Inventory_DB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="19" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bookstore_1aec735b490f96dc3ea93e60c4dbec3ff0" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="class_book" kindref="compound">Book</ref> &gt;</type>
        <definition>using Bookstore::ShoppingCart =  std::map&lt;std::string , Book &gt;</definition>
        <argsstring></argsstring>
        <name>ShoppingCart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="20" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bookstore_1aae615c92c10ffb6253f8e295700c18e8" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="class_bookstore_1aec735b490f96dc3ea93e60c4dbec3ff0" kindref="member">ShoppingCart</ref> &gt;</type>
        <definition>using Bookstore::ShoppingCarts =  std::map&lt;std::string , ShoppingCart &gt;</definition>
        <argsstring></argsstring>
        <name>ShoppingCarts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="21" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_bookstore_1a852a485311e323bda07bb474fd39a1a2" prot="private" static="yes" mutable="no">
        <type>constexpr unsigned int</type>
        <definition>constexpr unsigned int Bookstore::REORDER_THRESHOLD</definition>
        <argsstring></argsstring>
        <name>REORDER_THRESHOLD</name>
        <initializer>= 15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="49" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" bodystart="49" bodyend="-1"/>
        <referencedby refid="class_bookstore_1ae22380272d6bb1c94ac620d95bc0ab3e" compoundref="_bookstore_8cpp" startline="127" endline="179">reorderItems</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_bookstore_1a886df07eec29b5bbabf94147a6b818d4" prot="private" static="yes" mutable="no">
        <type>constexpr unsigned int</type>
        <definition>constexpr unsigned int Bookstore::LOT_COUNT</definition>
        <argsstring></argsstring>
        <name>LOT_COUNT</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="50" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" bodystart="50" bodyend="-1"/>
        <referencedby refid="class_bookstore_1ae22380272d6bb1c94ac620d95bc0ab3e" compoundref="_bookstore_8cpp" startline="127" endline="179">reorderItems</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bookstore_1a24d67309b2a1e464b183eeef6bbd5ca9" prot="private" static="no" mutable="no">
        <type><ref refid="class_bookstore_1a011ecf363f27548abc41e399d536c27d" kindref="member">Inventory_DB</ref></type>
        <definition>Inventory_DB Bookstore::_inventoryDB</definition>
        <argsstring></argsstring>
        <name>_inventoryDB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="53" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" bodystart="53" bodyend="-1"/>
        <referencedby refid="class_bookstore_1afed5f4cac4a039e02bcab174058da680" compoundref="_bookstore_8cpp" startline="14" endline="41">Bookstore</referencedby>
        <referencedby refid="class_bookstore_1ab6c5783c56572530b5a48c2c58ba119c" compoundref="_bookstore_8cpp" startline="49" endline="52">inventory</referencedby>
        <referencedby refid="class_bookstore_1a2070d6b68ab700dd10fcb2ba94135a43" compoundref="_bookstore_8cpp" startline="60" endline="119">processCustomerShoppingCarts</referencedby>
        <referencedby refid="class_bookstore_1ae22380272d6bb1c94ac620d95bc0ab3e" compoundref="_bookstore_8cpp" startline="127" endline="179">reorderItems</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bookstore_1afed5f4cac4a039e02bcab174058da680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bookstore::Bookstore</definition>
        <argsstring>(const std::string &amp;persistenyInventoryDB=&quot;BookstoreInventory.dat&quot;)</argsstring>
        <name>Bookstore</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>persistenyInventoryDB</declname>
          <defval>&quot;BookstoreInventory.dat&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TO-DO (1) ////////////////////////////// Include necessary header files Hint: Include what you use, use what you include </para>        </detaileddescription>
        <inbodydescription>
<para>TO-DO (2) //////////////////////////////</para><para>The file&apos;s inventory contents consists of a quoted ISBN string followed by a quantity on hand unsigned integer separated by whitespace, like this: &quot;9861311467&quot; 8 &quot;9794201189&quot; 46 &quot;9971691361&quot; 35 &quot;9991137319&quot; 9</para><para>While no errors (eof, open failure, data type mismatch, etc,) detected, read the inventory record from the input stream and then add that information to the memory resident inventory database.</para><para>Hint: Extract the quoted string and the quantity </para>        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="28" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.cpp" bodystart="14" bodyend="41"/>
        <references refid="class_bookstore_1a24d67309b2a1e464b183eeef6bbd5ca9" compoundref="_bookstore_8hpp" startline="53">_inventoryDB</references>
      </memberdef>
      <memberdef kind="function" id="class_bookstore_1ab6c5783c56572530b5a48c2c58ba119c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bookstore_1a011ecf363f27548abc41e399d536c27d" kindref="member">Inventory_DB</ref> &amp;</type>
        <definition>Bookstore::Inventory_DB &amp; Bookstore::inventory</definition>
        <argsstring>()</argsstring>
        <name>inventory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="31" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.cpp" bodystart="49" bodyend="52"/>
        <references refid="class_bookstore_1a24d67309b2a1e464b183eeef6bbd5ca9" compoundref="_bookstore_8hpp" startline="53">_inventoryDB</references>
        <referencedby refid="classanonymous__namespace_02_bookstore_tests_8cpp_03_1_1_bookstore_regression_test_1a3d5d8f44c6ab390559a44b37864e7b47" compoundref="_bookstore_tests_8cpp" startline="96" endline="144">anonymous_namespace{BookstoreTests.cpp}::BookstoreRegressionTest::BookstoreRegressionTest</referencedby>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="13" endline="71">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_bookstore_1a2070d6b68ab700dd10fcb2ba94135a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bookstore_1a8a4586ed49d4d9f934215fd8ee3b1031" kindref="member">BooksSold</ref></type>
        <definition>Bookstore::BooksSold Bookstore::processCustomerShoppingCarts</definition>
        <argsstring>(const ShoppingCarts &amp;shoppingCarts)</argsstring>
        <name>processCustomerShoppingCarts</name>
        <param>
          <type>const <ref refid="class_bookstore_1aae615c92c10ffb6253f8e295700c18e8" kindref="member">ShoppingCarts</ref> &amp;</type>
          <declname>shoppingCarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TO-DO (3) //////////////////////////////</para><para>For each customer, print out a receipt containing a full description of books (obtained from the database of all books in the world) in their shopping cart along with the total amount due. As items are being scanned, decrement the quantity on hand for that book in the store&apos;s inventory.</para><para>Hint: Here&apos;s some pseudocode to get you started. Create two loops, one nested inside the other, like this:<orderedlist>
<listitem><para>For each shopping cart 1.1 Initialize the amount due to zero 1.2 For each book in the customer&apos;s shopping cart 1.2.1 If the book is not found in the database of all books in the world, indicate on the receipt it&apos;s free of charge 1.2.2 Otherwise 1.2.2.1 Print the full description on the receipt 1.2.2.2 Add the book&apos;s price to the amount due 1.2.2.3 If the book is something the store sells (the item is in the store&apos;s inventory) 1.2.2.3.1 Decrease the number of books on hand for the book sold 1.2.2.3.2 Add the book&apos;s isbn to the list of books sold today 1.3 Print the total amount due on the receipt </para></listitem></orderedlist>
</para>        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="38" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.cpp" bodystart="60" bodyend="119"/>
        <references refid="class_bookstore_1a24d67309b2a1e464b183eeef6bbd5ca9" compoundref="_bookstore_8hpp" startline="53">_inventoryDB</references>
        <references refid="class_book_database_1ac21ac248fbeaa4d38846f0f08213c3b5" compoundref="_book_database_8cpp" startline="14" endline="29">BookDatabase::instance</references>
        <references refid="class_book_1ab920f73325f9598513c0f1d731c9a8e4" compoundref="_book_8cpp" startline="19" endline="19">Book::price</references>
        <references refid="class_book_1a5c6aed2bb9537bdf451c83d1377ef593" compoundref="_book_8cpp" startline="17" endline="17">Book::title</references>
        <referencedby refid="classanonymous__namespace_02_bookstore_tests_8cpp_03_1_1_bookstore_regression_test_1a3d5d8f44c6ab390559a44b37864e7b47" compoundref="_bookstore_tests_8cpp" startline="96" endline="144">anonymous_namespace{BookstoreTests.cpp}::BookstoreRegressionTest::BookstoreRegressionTest</referencedby>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="13" endline="71">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_bookstore_1ae22380272d6bb1c94ac620d95bc0ab3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bookstore::reorderItems</definition>
        <argsstring>(BooksSold &amp;todaysSales)</argsstring>
        <name>reorderItems</name>
        <param>
          <type><ref refid="class_bookstore_1a8a4586ed49d4d9f934215fd8ee3b1031" kindref="member">BooksSold</ref> &amp;</type>
          <declname>todaysSales</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>TO-DO (4) //////////////////////////////</para><para>For each product that has fallen below the reorder threshold, assume an order has been placed and now the shipment has arrived. Update the store&apos;s inventory to reflect the additional items on hand.</para><para>Hint: Here&apos;s some pseudocode to get you started. 1 For each book sold today 1.1 If the book is not in the store&apos;s inventory or if the number of books on hand has fallen below the re-order threshold 1.1.1 If the book is not in the database of all books in the world, 1.1.1.1 display just the ISBN 1.1.2 Otherwise, 1.1.2.1 display the book&apos;s full description 1.1.3 If the book is not in the store&apos;s inventory 1.1.3.1 display a notice indicating the book no longer sold in this store and will not be re-ordered 1.1.4 Otherwise, 1.1.4.1 Display the current quantity on hand and the quantity re-ordered 1.1.4.2 Increase the quantity on hand by the number of items ordered and received (LOT_COUNT) 2 Reset the list of book sold today so the list can be reused again later </para>        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="41" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.cpp" bodystart="127" bodyend="179"/>
        <references refid="class_bookstore_1a24d67309b2a1e464b183eeef6bbd5ca9" compoundref="_bookstore_8hpp" startline="53">_inventoryDB</references>
        <references refid="class_book_database_1ac21ac248fbeaa4d38846f0f08213c3b5" compoundref="_book_database_8cpp" startline="14" endline="29">BookDatabase::instance</references>
        <references refid="class_bookstore_1a886df07eec29b5bbabf94147a6b818d4" compoundref="_bookstore_8hpp" startline="50">LOT_COUNT</references>
        <references refid="class_bookstore_1a852a485311e323bda07bb474fd39a1a2" compoundref="_bookstore_8hpp" startline="49">REORDER_THRESHOLD</references>
        <referencedby refid="classanonymous__namespace_02_bookstore_tests_8cpp_03_1_1_bookstore_regression_test_1a3d5d8f44c6ab390559a44b37864e7b47" compoundref="_bookstore_tests_8cpp" startline="96" endline="144">anonymous_namespace{BookstoreTests.cpp}::BookstoreRegressionTest::BookstoreRegressionTest</referencedby>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="13" endline="71">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_bookstore_1abb469147b72d1a9d258323c757495c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bookstore_1aae615c92c10ffb6253f8e295700c18e8" kindref="member">ShoppingCarts</ref></type>
        <definition>Bookstore::ShoppingCarts Bookstore::makeShoppingCarts</definition>
        <argsstring>()</argsstring>
        <name>makeShoppingCarts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="44" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.cpp" bodystart="187" bodyend="277"/>
        <referencedby refid="classanonymous__namespace_02_bookstore_tests_8cpp_03_1_1_bookstore_regression_test_1a3d5d8f44c6ab390559a44b37864e7b47" compoundref="_bookstore_tests_8cpp" startline="96" endline="144">anonymous_namespace{BookstoreTests.cpp}::BookstoreRegressionTest::BookstoreRegressionTest</referencedby>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="13" endline="71">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="26">
        <label>std::map&lt; std::string, unsigned int &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>Bookstore</label>
        <link refid="class_bookstore"/>
        <childnode refid="26" relation="usage">
          <edgelabel>_inventoryDB</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="27">
        <label>std::string</label>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" line="12" column="1" bodyfile="Z:/P4 - Associative Containers/SourceCode/Bookstore.hpp" bodystart="11" bodyend="54"/>
    <listofallmembers>
      <member refid="class_bookstore_1a24d67309b2a1e464b183eeef6bbd5ca9" prot="private" virt="non-virtual"><scope>Bookstore</scope><name>_inventoryDB</name></member>
      <member refid="class_bookstore_1a8a4586ed49d4d9f934215fd8ee3b1031" prot="public" virt="non-virtual"><scope>Bookstore</scope><name>BooksSold</name></member>
      <member refid="class_bookstore_1afed5f4cac4a039e02bcab174058da680" prot="public" virt="non-virtual"><scope>Bookstore</scope><name>Bookstore</name></member>
      <member refid="class_bookstore_1ab6c5783c56572530b5a48c2c58ba119c" prot="public" virt="non-virtual"><scope>Bookstore</scope><name>inventory</name></member>
      <member refid="class_bookstore_1a011ecf363f27548abc41e399d536c27d" prot="public" virt="non-virtual"><scope>Bookstore</scope><name>Inventory_DB</name></member>
      <member refid="class_bookstore_1a886df07eec29b5bbabf94147a6b818d4" prot="private" virt="non-virtual"><scope>Bookstore</scope><name>LOT_COUNT</name></member>
      <member refid="class_bookstore_1abb469147b72d1a9d258323c757495c66" prot="public" virt="non-virtual"><scope>Bookstore</scope><name>makeShoppingCarts</name></member>
      <member refid="class_bookstore_1a2070d6b68ab700dd10fcb2ba94135a43" prot="public" virt="non-virtual"><scope>Bookstore</scope><name>processCustomerShoppingCarts</name></member>
      <member refid="class_bookstore_1a852a485311e323bda07bb474fd39a1a2" prot="private" virt="non-virtual"><scope>Bookstore</scope><name>REORDER_THRESHOLD</name></member>
      <member refid="class_bookstore_1ae22380272d6bb1c94ac620d95bc0ab3e" prot="public" virt="non-virtual"><scope>Bookstore</scope><name>reorderItems</name></member>
      <member refid="class_bookstore_1aec735b490f96dc3ea93e60c4dbec3ff0" prot="public" virt="non-virtual"><scope>Bookstore</scope><name>ShoppingCart</name></member>
      <member refid="class_bookstore_1aae615c92c10ffb6253f8e295700c18e8" prot="public" virt="non-virtual"><scope>Bookstore</scope><name>ShoppingCarts</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
